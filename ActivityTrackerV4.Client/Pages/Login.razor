@page "/login"
@using ActivityTrackerV4.Business
@using Microsoft.AspNetCore.Components.Authorization
@inject HttpClient _httpClient
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService _localStorageService
@inject AuthenticationStateProvider _authenticationStateProvider

<h3>Login</h3>

<div>
    <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="email">Email</label>
            <InputText id="email" @bind-Value="loginModel.Email" class="form-control" />
        </div>

        <div class="mb-3">
            <label for="password">Password</label>
            <InputText id="password" @bind-Value="loginModel.Password" type="password" class="form-control" />
        </div>

        <button type="submit" class="btn btn-primary">Login</button>
    </EditForm>
</div>

@code {
    private LoginModel loginModel = new LoginModel();

    private async Task HandleLogin()
    {
        // Call your API to authenticate and get the token
        var response = await _httpClient.PostAsJsonAsync("api/accounts/login", loginModel);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<LoginResult>();
            await _localStorageService.SetItemAsync("authToken", result.Token);

            ((CustomAuthenticationStateProvider)_authenticationStateProvider).NotifyUserAuthentication(result.Token);
            NavigationManager.NavigateTo("/");
        }
        else
        {
            // Handle error response
            Console.WriteLine("Login failed");
        }
    }

    public class LoginModel
    {
        public string Email { get; set; }
        public string Password { get; set; }
    }

    public class LoginResult
    {
        public string Token { get; set; }
        public string RefreshToken { get; set; }
    }
}